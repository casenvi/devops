steps:

- id: "Executar o docker-compose"
  name: "gcr.io/$PROJECT_ID/docker-compose:1.24.0"
  args: ['-f', 'docker-compose.cloudbuild.yaml', 'up', '-d']

- id: "Executar o composer"
  name: "gcr.io/cloud-builders/docker"
  args: ['exec', '-t', 'Catalog-app', 'composer', 'install']

- id: "Copiar o arquivo .env.example para .env"
  name: "gcr.io/cloud-builders/docker"
  args: ['exec', '-t', 'Catalog-app', 'cp', '/opt/docker/.env', '.env']

- id: "Rodar um artisan key:generate"
  name: "gcr.io/cloud-builders/docker"
  args: ['exec', '-t', 'Catalog-app', 'php', '/var/www/artisan', 'key:generate']

- id: "Executar as migrações"
  name: "gcr.io/cloud-builders/docker"
  args: ['exec', '-t', 'Catalog-app', 'php', '/var/www/artisan', 'migrate']

- id: "Executar os testes utilizando o PHPUnit"
  name: "gcr.io/cloud-builders/docker"
  args: ['exec', '-t', 'Catalog-app', 'php', '/var/www/vendor/bin/phpunit', '-c', '/var/www/phpunit.xml']
version: '3'

services: 

    app:
        build: .docker/app
        depends_on: 
            - mysql
            - redis
        container_name: Catalog-app
        volumes: 
            - ./Data/backend/laravel:/var/www/backend
            - ./Data/frontend:/var/www/frontend
            - ./Data/.npm-cache:/var/www/.npm-cache
            - .docker/app:/opt/docker
        networks: 
            - app-network
        entrypoint: 
            dockerize -template /opt/docker/.env:backend/.env -template /opt/docker/.env.testing:backend/.env.testing --wait tcp://mysql:3306 -timeout 40s /opt/docker/entrypoint.sh
        ports:
            - "3000:3000"
        environment: 
            - _DB_HOST=Catalog-mysql
            - _DB_DATABASE=catalog_prod
            - _DB_USERNAME=root
            - _DB_PASSWORD=root
            - _DB_DATABASE_TEST=catalog_test
    
    nginx:
        build: .docker/nginx
        container_name: Catalog-nginx
        restart: always
        tty: true
        ports: 
            - "80:80"
        volumes: 
            - ./Data/backend/laravel:/var/www/backend
            - ./Data/frontend:/var/www/frontend
            - .docker/nginx:/opt/docker
        networks: 
            - app-network
        depends_on: 
            - app
        entrypoint: 
            dockerize -template /opt/docker/nginx.conf:/etc/nginx/conf.d/default.conf nginx -g 'daemon off;'
        environment: 
            - PHP_FPM_HOST=Catalog-app
            - PHP_FPM_PORT=9000

    redis:
        image: redis:alpine
        container_name: Catalog-redis
        expose: 
            - 6379
        networks: 
            - app-network
    
    mysql:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: Catalog-mysql
        restart: always
        tty: true
        ports: 
            - "3306:3306"
        networks: 
            - app-network
        environment: 
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        volumes: 
            - ./Data/database:/var/lib/mysql
            - ./.docker/mysql:/docker-entrypoint-initdb.d #para rodar scripts na criação da máquina

networks:
    app-network:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.172.0.0/16
